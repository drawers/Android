/*
 * Copyright (c) 2022 DuckDuckGo
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer

apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'com.github.johnrengelman.shadow'

def shade = configurations.maybeCreate("compileShaded")
configurations.getByName("compileOnly").extendsFrom(shade)

dependencies {
    compileOnly Kotlin.stdlib.jdk7
    compileOnly "com.android.tools.lint:lint-api:$lint_version"
    compileOnly "com.android.tools.lint:lint-checks:$lint_version"

    compileShaded('org.json:json:20240303')

    testImplementation Testing.junit4
    testImplementation "com.android.tools.lint:lint-api:$lint_version"
    testImplementation "com.android.tools.lint:lint-tests:$lint_version"
    testImplementation('org.json:json:20240303')
}


java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

kotlin {
    jvmToolchain(17)
}

tasks.register('jvm_checks') {
    dependsOn 'test'
}

def shadowJar = tasks.shadowJar
shadowJar.configure {
    archiveClassifier.set("")
    configurations = [shade]
    relocate("org.json", "com.duckduckgo.shaded.org.json")
    transformers.add(new ServiceFileTransformer())
}


artifacts {
    runtimeOnly(shadowJar)
    archives(shadowJar)
}
